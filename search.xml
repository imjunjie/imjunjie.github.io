<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown语法</title>
      <link href="/markdown-yu-fa.html"/>
      <url>/markdown-yu-fa.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h1><blockquote><p>Markdown是什么？<br>谁创造了它？<br>为什么使用它？<br>谁在用它?<br>怎么使用它？</p></blockquote><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="1-Markdown是什么"><a href="#1-Markdown是什么" class="headerlink" title="1. Markdown是什么?"></a>1. Markdown是什么?</h2><p>Markdown是一种轻量级<strong>标记语言</strong>，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。<br>Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p><p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>相比WYSIWYG编辑器<br>● <strong>优点：</strong><br>1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br>2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可<br>● <strong>缺点：</strong><br>1、需要记一些语法（当然，是很简单。五分钟学会）。<br>2、有些平台不支持Markdown编辑模式。</p><p>还好，简书是支持Markdown编辑模式的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开启方式：设置-&gt;默认编辑器-&gt;Markdown编辑器</span><br></pre></td></tr></table></figure></p><h2 id="2-谁创造了它？"><a href="#2-谁创造了它？" class="headerlink" title="2.谁创造了它？"></a>2.谁创造了它？</h2><p>它由<a href="http://www.aaronsw.com/" target="_blank" rel="noopener">Aaron Swartz</a>和John Gruber共同设计，Aaron Swartz就是那位于去年（2013年1月11日）自杀,有着开挂一般人生经历的程序员。维基百科对他的<a href="http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8" target="_blank" rel="noopener">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。</p><ul><li>14岁参与RSS 1.0规格标准的制订。</li><li>2004年入读斯坦福，之后退学。</li><li>2005年创建Infogami，之后与Reddit合并成为其合伙人。</li><li>2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。</li><li>2011年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。</li><li>2013年1月自杀身亡。<br><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1551367432947&amp;di=63d1075abe0b39e35edf0d7523dd34ad&amp;imgtype=0&amp;src=http%3A%2F%2Fimg1.cache.netease.com%2Fcatchpic%2F6%2F65%2F65811AEA5A1CF59D92E71FD4F5DDA637.jpg" alt="Aaron_Swartz" title="Aaron_Swartz"></li></ul><h2 id="3-为什么要用它？"><a href="#3-为什么要用它？" class="headerlink" title="3.为什么要用它？"></a>3.为什么要用它？</h2><ul><li>它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。</li><li>兼容HTML，可以转换为HTML格式发布。</li><li>跨平台使用。</li><li>越来越多的网站支持Markdown。</li><li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li><li>摆脱Word（我不是认真的）。</li></ul><h2 id="4-谁在用它？"><a href="#4-谁在用它？" class="headerlink" title="4. 谁在用它？"></a>4. 谁在用它？</h2><p>Markdown的使用者：</p><ul><li>GitHub</li><li>简书</li><li>Stack Overflow</li><li>Apollo</li><li>Moodle</li><li>Reddit</li><li>等等</li></ul><h2 id="5-怎么使用它？"><a href="#5-怎么使用它？" class="headerlink" title="5.怎么使用它？"></a>5.怎么使用它？</h2><p>如果不算扩展，Markdown的语法绝对简单到让你爱不释手。<br>Markdown语法主要分为如下几大部分：<strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠<code>\</code></strong>，<strong>符号~</strong>等。</p><h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><p>两种方式：<br>● <strong>方式1</strong><br>使用<code>=</code>和<code>-</code>标记一级和二级标题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=======</span><br><span class="line">二级标题</span><br><span class="line">-------</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>● <strong>方式2</strong>：使用#，可表示1-6级标题。</p><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。<br>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br><span class="line">```</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure></p><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。<br>段落：以一个空行开始，以一个空行结束，中间的就是一个段落。</p><h1 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h1><p>● <strong>加粗</strong><br>要加粗的文字左右分别用两个<code>*号</code>包起来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**加粗的字体**</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><strong>加粗的字体</strong><br>● <strong>斜体</strong><br>要倾斜的文字<code>左右</code>分别用一个<code>*号</code>包起来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*要倾斜的字体*</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><em>要倾斜的文字</em><br>● <strong>斜体加粗</strong><br>要倾斜和加粗的文字<code>左右</code>分别用三个<code>*号包</code>起来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***倾斜加粗的字体***</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><strong><em>倾斜加粗的字体</em></strong><br>● <strong>删除线</strong><br>要加删除线的文字<code>左右</code>分别用两个<code>~~号</code>包起来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线的使用~~</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><del>删除线的使用</del></p><h1 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;，n个···<br>貌似可以一直加下去，但没神马卵用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容1</span><br><span class="line">&gt;&gt;这是引用的内容2</span><br><span class="line">&gt;&gt;&gt;这是引用的内容3</span><br><span class="line">&gt;&gt;&gt;&gt;这是引用的内容4</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;这是引用的内容5</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：</p><blockquote><p>这是引用的内容1</p><blockquote><p>这是引用的内容2</p><blockquote><p>这是引用的内容3</p><blockquote><p>这是引用的内容4</p><blockquote><p>这是引用的内容5</p></blockquote></blockquote></blockquote></blockquote></blockquote><h1 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h1><p>三个或者三个以上的 - 或者 * 都可以。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">****</span><br></pre></td></tr></table></figure></p><h2 id="运行结果，如下："><a href="#运行结果，如下：" class="headerlink" title="运行结果，如下："></a>运行结果，如下：</h2><hr><hr><hr><h1 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片地址 &quot;图片title&quot;)</span><br></pre></td></tr></table></figure><p>其中，图片alt就是显示图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加也可不加。<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![宠物](http://baiducdn.pig66.com/uploadfile/2017/0511/20170511074935785.jpg &quot;宠物狗狗&quot;)</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><img src="http://baiducdn.pig66.com/uploadfile/2017/0511/20170511074935785.jpg" alt="宠物" title="宠物狗狗"></p><h1 id="六、超链接"><a href="#六、超链接" class="headerlink" title="六、超链接"></a>六、超链接</h1><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[超链接名字](超链接地址 &quot;超链接title&quot;)</span><br></pre></td></tr></table></figure></p><p>其中，”超链接title”可加也可不加。<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[简书](http://jianshu.com &quot;访问简书主页&quot;)</span><br><span class="line">[百度](http://www.baidu.com &quot;访问百度主页&quot;)</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><a href="http://www.jianshu.com" title="访问简书主页" target="_blank" rel="noopener">简书</a><br><a href="http://www.baidu.com" title="访问百度主页" target="_blank" rel="noopener">百度</a><br>注：Markdown本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用html语言的a标签代替。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.jianshu.com/u/1f5ac0cf6a8b&quot; target=&quot;_blank&quot;&gt;简书&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><h1 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h1><p>● <strong>有序列表</strong><br>有序列表：使用 数字 加一个英文句点.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表</span><br><span class="line">2. 有序列表</span><br><span class="line">3. 有序列表</span><br><span class="line">4. 有序列表</span><br><span class="line">5. 有序列表</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：</p><ol><li>有序列表</li><li>有序列表</li><li>有序列表</li><li>有序列表</li><li>有序列表</li></ol><p>● <strong>无序列表</strong><br>语法：<br>无序列表用<code>&quot; - + *&quot;</code>任何一种都可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容1</span><br><span class="line">+ 列表内容2</span><br><span class="line">* 列表内容3</span><br></pre></td></tr></table></figure></p><p>注意：- + * 跟内容之间都要有一个空格，且结束列表时，需要中间空一行。<br>运行结果，如下：</p><ul><li>列表内容1</li></ul><ul><li>列表内容2</li></ul><ul><li>列表内容3</li></ul><p>● <strong>列表嵌套</strong><br>上一级和下一级之间<code>敲三个空格</code>即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 一级无序列表内容1</span><br><span class="line">   - 二级无序列表内容2</span><br><span class="line">   - 二级无序列表内容2</span><br><span class="line">   - 二级无序列表内容2</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：</p><ul><li>一级无序列表内容1<ul><li>二级无序列表内容2</li><li>二级无序列表内容2</li><li>二级无序列表内容2</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+ 一级无序列表内容1</span><br><span class="line">   + 二级无序列表内容2</span><br><span class="line">   + 二级无序列表内容2</span><br><span class="line">   + 二级无序列表内容2</span><br></pre></td></tr></table></figure><p>运行结果，如下：</p><ul><li>一级无序列表内容1<ul><li>二级无序列表内容2</li><li>二级无序列表内容2</li><li>二级无序列表内容2</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 一级无序列表内容1</span><br><span class="line">   * 二级无序列表内容2</span><br><span class="line">   * 二级无序列表内容2</span><br><span class="line">   * 二级无序列表内容2</span><br></pre></td></tr></table></figure><p>运行结果，如下：</p><ul><li>以及无序列表内容1<ul><li>二级无序列表内容2   </li><li>二级无序列表内容2   </li><li>二级无序列表内容2</li></ul></li></ul><p>特别注意，如下这种情况：</p><ul><li>一级无序列表内容1<ul><li>二级无序列表内容2</li><li>二级无序列表内容2</li><li>二级无序列表内容2<ul><li>三级无序列表内容3</li><li>三级无序列表内容3</li><li>三级无序列表内容3</li></ul></li><li>二级无序列表内容2</li></ul></li><li>一级无序列表内容1<br>（不知道<code>为什么</code>？加入字体高亮度显示时，会出错）</li></ul><p>运行结果，如下：</p><ul><li>一级无序列表内容1<ul><li>二级无序列表内容2</li><li>二级无序列表内容2</li><li>二级无序列表内容2<ul><li>三级无序列表内容3</li><li>三级无序列表内容3</li><li>三级无序列表内容3</li></ul></li><li>二级无序列表内容2</li></ul></li><li>一级无序列表内容1         </li></ul><p>注意：这里想说明的是不同级别之间要有换行，如果不换行，默认还是上一级别。但是，这里实验可以发现这个问题已经不存在啦。</p><h1 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h1><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br></pre></td></tr></table></figure></p><p>说明：<br>第二行分割表头和内容。<br><code>-</code> 有一个就行，为了对齐，多加了几个<br>文字默认居左<br>■两边加：表示文字居中<br>■右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名|技能|排行</span><br><span class="line">--|:--:|--:</span><br><span class="line">刘备|哭|大哥</span><br><span class="line">关羽|打|二哥</span><br><span class="line">张飞|骂|三弟</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br>姓名|技能|排行<br>–|:–:|–:<br>刘备|哭|大哥<br>关羽|打|二哥<br>张飞|骂|三弟</p><h1 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h1><p>语法：<br>● <strong>单行代码</strong>：代码之间分别用一个反引号包起来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`代码内容`</span><br></pre></td></tr></table></figure></p><p>● <strong>代码块</strong>：代码之间分别用三个反引号包起来，且两边的反引号单独占一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">```</span><br></pre></td></tr></table></figure></p><p>示例：<br>单行代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`create database hero;`</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><code>create database hero;</code><br>代码块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">    function fun()&#123;</span><br><span class="line">         echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    fun();</span><br><span class="line">```</span><br></pre></td></tr></table></figure></p><p>运行结果，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fun()&#123;</span><br><span class="line">     echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure></p><h1 id="十、流程图"><a href="#十、流程图" class="headerlink" title="十、流程图"></a>十、流程图</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```flow</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;```</span><br></pre></td></tr></table></figure><p>运行结果，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure></p><p>(注意，这里并未打印出流程图，不知道什么原因？)</p><h1 id="十一、显示网址"><a href="#十一、显示网址" class="headerlink" title="十一、显示网址"></a>十一、显示网址</h1><p>● <strong>写法1：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">超链接：[连接名称](网址 , 标题)</span><br><span class="line">[我是链接名](http://www.izhangbo.cn, <span class="string">"我是标题"</span>)</span><br><span class="line">[&lt;i class=<span class="string">"icon-refresh"</span>&gt;&lt;/i&gt; 点我刷新](/sonfilename/)</span><br></pre></td></tr></table></figure></p><p>● <strong>写法2：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">另一种超链接写法：[链接名][链接代号]</span><br><span class="line">[here][3]</span><br><span class="line">然后在别的地方定义 3 这个详细链接信息，</span><br><span class="line">[3]: http://www.izhangbo.cn <span class="string">"聚牛团队"</span></span><br></pre></td></tr></table></figure></p><p>直接展示链接的写法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;http://www.izhangbo.cn&gt;</span><br></pre></td></tr></table></figure></p><h1 id="十二、反引号"><a href="#十二、反引号" class="headerlink" title="十二、反引号"></a>十二、反引号</h1><p>code格式：反引号<br>Use the <code>printf()</code> function.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``There is a literal backtick (`) here.针对在代码区段内插入反引号的情况``</span><br></pre></td></tr></table></figure></p><p><code>There is a literal backtick (`) here.针对在代码区段内插入反引号的情况</code> </p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://www.jianshu.com/p/191d1e21f7ed" title="Markdown基本语法-简书2018.01.17" target="_blank" rel="noopener">Markdown基本语法</a> 网址：<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">https://www.jianshu.com/p/191d1e21f7ed</a><br><a href="https://github.com/younghz/Markdown" title="Markdown-younghz" target="_blank" rel="noopener">younghz/Markdown</a> 网址：<a href="https://github.com/younghz/Markdown" target="_blank" rel="noopener">https://github.com/younghz/Markdown</a><br><a href="https://learnku.com/laravel/t/621/you-will-be-able-to-master-these-markdown-grammars" title="创于3年前" target="_blank" rel="noopener">掌握这几种 Markdown 语法</a><br><a href="http://wow.kuapp.com/markdown/" title="点击查看快速入门" target="_blank" rel="noopener">Markdown 语法说明 (简体中文版)</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo中插入图片的方法</title>
      <link href="/hexo-zhong-cha-ru-tu-pian-de-fang-fa.html"/>
      <url>/hexo-zhong-cha-ru-tu-pian-de-fang-fa.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在写文章时，常常有配图说明的需求。Hexo有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN上引用。</p><h1 id="插入本地图片"><a href="#插入本地图片" class="headerlink" title="插入本地图片"></a>插入本地图片</h1><h2 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h2><p>本地图片统一放在<code>source/images</code>文件夹中。</p><h3 id="使用Markdown语法"><a href="#使用Markdown语法" class="headerlink" title="使用Markdown语法"></a>使用Markdown语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1  ![](/images/test.jpg)</span><br><span class="line">2  helllsfl</span><br><span class="line">3  fslfml</span><br></pre></td></tr></table></figure><p>注意：<br>    ●images的名字可以改变，比如images0,images1,等<br>    ●images前面的”/“，必须要有，且不可写source，格式固定。</p><h3 id="使用Html语法"><a href="#使用Html语法" class="headerlink" title="使用Html语法"></a>使用Html语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"/images/test.jpg"</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h2><h3 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a><a href="https://univer2012.github.io/2017/04/23/6how-to-insert-picture-in-hexo-blog/" target="_blank" rel="noopener">使用插件</a></h3><p>1、把根目录下的配置文件_config.yml里的post_asset_folder选项设置为true；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1 <span class="comment"># 文章配置</span></span><br><span class="line">2 <span class="comment"># 这个地方一般直接取默认值不用修改</span></span><br><span class="line">3 <span class="comment"># Writing</span></span><br><span class="line">4 new_post_name: :title.md <span class="comment"># File name of new posts # 新文章的文件名称</span></span><br><span class="line">5 default_layout: post <span class="comment"># 预设布局</span></span><br><span class="line">6 titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase # 把标题转换为 titlecase（titlecase指的是将每个单词首字母转换成大写）</span></span><br><span class="line">7 external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab # 在新标签中打开链接</span></span><br><span class="line">8 filename_case: 0 <span class="comment"># 把文件名称转换为 (1) 小写或 (2) 大写, 0表示不变</span></span><br><span class="line">9 render_drafts: <span class="literal">false</span> <span class="comment"># 显示草稿</span></span><br><span class="line">10 post_asset_folder: <span class="literal">true</span> <span class="comment"># 启动 Asset 文件夹</span></span><br><span class="line">11 relative_link: <span class="literal">false</span> <span class="comment"># 启动 Asset 文件夹</span></span><br><span class="line">12 future: <span class="literal">true</span> <span class="comment"># 显示未来的文章</span></span><br><span class="line">13 highlight: <span class="comment"># 代码块的设置</span></span><br><span class="line">14   <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">15   line_number: <span class="literal">true</span> <span class="comment"># 是否显示行号</span></span><br><span class="line">16   auto_detect: <span class="literal">false</span> <span class="comment"># 是否自动监测</span></span><br><span class="line">17   tab_replace: <span class="comment"># 将 tab 替换成其他字符串</span></span><br><span class="line">```  </span><br><span class="line">2、在你的hexo目录下执行这句话npm install hexo-asset-image --save，这是下载安装一个可以上传本地图片的插件：</span><br><span class="line">``` bash</span><br><span class="line">huangsengolndeMacBook-Pro:hexo-blog huangaengoln$ npm install hexo-asset-image --save</span><br><span class="line">(node:59464) fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.</span><br><span class="line">hexo-site@0.0.0 /Users/huangaengoln/Documents/hexo-blog</span><br><span class="line">└─┬ hexo-asset-image@0.0.3 </span><br><span class="line">  └─┬ cheerio@0.19.0 </span><br><span class="line">    ├─┬ css-select@1.0.0 </span><br><span class="line">    │ ├── css-what@1.0.0 </span><br><span class="line">    │ └── domutils@1.4.3 </span><br><span class="line">    └── lodash@3.10.1 </span><br><span class="line">huangsengolndeMacBook-Pro:hexo-blog huangaengoln$</span><br></pre></td></tr></table></figure></p><p>3、下载完成后，下次再执行hexo n “1How-to-change-App-theme-color”来生成md博文时，/source/_posts文件夹内除了1How-to-change-App-theme-color.md文件，还有一个与之同名的文件夹；<br><img src="/pic1.png" alt><br>4、最后在1How-to-change-App-theme-color.md中想引入图片时，先把图片复制到md对应的文件夹1How-to-change-App-theme-color中，然后只需要1How-to-change-App-theme-color.md中按照markdown的格式引入图片：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 ![你想输入的替代文字](xxxx/图片名.jpg)</span><br></pre></td></tr></table></figure></p><p>注意：xxxx是这个md文件的名字，也是同名文件夹的名字，你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。<br>5、最后检查一下，hexo g生成页面后，进入public\2017\02\26\index.html文件中查看相关字段，可以发现，html标签内的语句是&lt;img src=”2017/02/26/xxxx/图片名.jpg&gt;””，而不是&lt;img src=”xxxx/图片名.jpg&gt;。这很重要，关乎你的网页是否可以真正加载你想插入的图片。</p><h1 id="插入网络图片"><a href="#插入网络图片" class="headerlink" title="插入网络图片"></a>插入网络图片</h1><h2 id="使用Markdown语法-1"><a href="#使用Markdown语法-1" class="headerlink" title="使用Markdown语法"></a>使用Markdown语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](网络图片地址)</span><br></pre></td></tr></table></figure><h2 id="使用Html语法-1"><a href="#使用Html语法-1" class="headerlink" title="使用Html语法"></a>使用Html语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"网络图片地址"</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="使用图床"><a href="#使用图床" class="headerlink" title="使用图床"></a>使用图床</h1><p>可以把你的图片上传到 七牛之类的服务器，然后直接按照markdown的方式使用。<br>例如可以使用github作为图床，</p><h2 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h2><p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如<a href="http://cloudinary.com/" target="_blank" rel="noopener">Cloudinary</a>提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。(来源：<a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/#" target="_blank" rel="noopener">Yan Yinhong</a>)</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Github与Hexo搭建个人博客</title>
      <link href="/shi-yong-github-yu-hexo-da-jian-ge-ren-bo-ke.html"/>
      <url>/shi-yong-github-yu-hexo-da-jian-ge-ren-bo-ke.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：这是一篇有关如何使用Github Pages和Hexo搭建自己独立博客的详尽教程，里面介绍了如何使用和配置Hexo框架，如何将Hexo部署到自己的Github项目中，域名注册，以及域名的绑定，还有我在搭建自己博客过程中所遇到的各种困难。</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一名安卓入门开发者，但，我只是入门！而且我对网站开发以及前端的知识几乎是零基础，所以在自己刚接触这个东西的时候，我像很多人一样，都是上网找教程，但是要知道，那都是程序员的教程。所以对于我这个网站技术小白来说，真是很难受，所以藉此机会写一篇让小白看得懂的教程。如果你是一个小白而且又想做自己的博客，可以，请跟着我的脚步，我会带你真真正正做一个属于你自己的博客。</p><h1 id="入门门槛"><a href="#入门门槛" class="headerlink" title="入门门槛"></a>入门门槛</h1><ol><li>必须耐得住折腾。</li><li>刻苦的学习精神和耐心</li></ol><h1 id="关于Github"><a href="#关于Github" class="headerlink" title="关于Github"></a>关于Github</h1><h2 id="一、Github的优点"><a href="#一、Github的优点" class="headerlink" title="一、Github的优点"></a>一、Github的优点</h2><ul><li>GitHub是基于git实现的代码托管。git可能是目前最好用的版本控制系统了，非常受欢迎。</li><li>GitHub可以免费使用，并且快速稳定。</li><li>Github上面的世界很精彩，用久了你的眼界会开阔很多。</li></ul><h2 id="二、什么是Github-Pages"><a href="#二、什么是Github-Pages" class="headerlink" title="二、什么是Github Pages"></a>二、什么是Github Pages</h2><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。</p><h2 id="三、为什么要使用Github-Pages"><a href="#三、为什么要使用Github-Pages" class="headerlink" title="三、为什么要使用Github Pages"></a>三、为什么要使用Github Pages</h2><ul><li>可以绑定你的域名(但暂时貌似只能绑定一个)。</li><li>简单快捷，使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。</li></ul><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>在 Windows 环境下安装 Node.js 非常简单，仅须到官网下载安装文件并执行即可完成安装。<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c6feba58fd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="node.js" title="node.js_download"><br>像我的是Windows 64位，直接下载安装，无脑下一步就行了，不需要配置环境变量。</p><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>去<a href="https://link.juejin.im/?target=https%3A%2F%2Fgit-scm.com%2Fdownload%2Fwin" target="_blank" rel="noopener">Git官网</a>根据你的电脑参数，下载对应版本。</p><p>下载完成，通过在命令行输入<code>git version</code>查看是否安装成功，有输出版本号说明安装成功。</p><p>鼠标邮件菜单里就多了<code>Git GUI Here</code>和<code>Git Bash Here</code>两个按钮，一个是图形界面的Git操作，一个是命令行，我们选择<code>Git Bash Here</code>。<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c6fea994bd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="git_pic1" title="git_install_step1"><br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c6feb8a041?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="git_pic2" title="git_install_step2"></p><ul><li>安装教程：<a href="https://link.juejin.im/?target=http%3A%2F%2Fjingyan.baidu.com%2Farticle%2F90895e0fb3495f64ed6b0b50.html" target="_blank" rel="noopener">如何在windows下安装Git</a></li><li>Git入门教程: <a href="https://link.juejin.im/?target=http%3A%2F%2Fgit.oschina.net%2Fprogit%2F" target="_blank" rel="noopener">Pro Git(中文版)</a></li><li>Git基本操作：</li></ul><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c725a598e9?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="git_op" title="git_op_picture"></p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="一、Hexo安装"><a href="#一、Hexo安装" class="headerlink" title="一、Hexo安装"></a>一、Hexo安装</h2><p>桌面右键鼠标，点击Git Bash Here，输入npm命令即可安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>第一句是安装hexo，第二句是安装hexo部署到git page的deployer，两个都需要安装。<br>如下图即安装完成。<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c728dda55c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="hexo_install" title="hexo_install_img"></p><h2 id="二、Hexo初始化配置"><a href="#二、Hexo初始化配置" class="headerlink" title="二、Hexo初始化配置"></a>二、Hexo初始化配置</h2><h3 id="创建Hexo文件夹"><a href="#创建Hexo文件夹" class="headerlink" title="创建Hexo文件夹"></a>创建Hexo文件夹</h3><p>安装完成后，根据自己喜好建立目录（如F:\Blog\Hexo），直接进入F:\Blog\Hexo文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，执行以下操作。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></p><p>安装 Hexo 完成后，Hexo 将会在指定文件夹中新建所需要的文件。Hexo文件夹下的目录如下：<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c7293a169d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="hexo_install_after" title="hexo_install_img2"></p><h3 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h3><p>执行下面语句，执行完即可登录localhost:4000查看效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></p><p>登录localhost:4000，即可看到本地的效果如下：<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c72acc46d2?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="log_in" title="log_in_imag"></p><h1 id="将博客部署到Github-Pages上"><a href="#将博客部署到Github-Pages上" class="headerlink" title="将博客部署到Github Pages上"></a>将博客部署到Github Pages上</h1><p>那么现在本地的博客已经搭建起来了，但是我们只可以通过本地连接查看我们的博客。那么我们现在需要做的就是把本地的博客发布到服务器上，让别人也可以连接我们的博客，而Github Pages就帮我完成了这件事情。但是Github Pages的代码就是寄存在Github上面的。那么接下来我们需要在Github上面创建一个新的项目。</p><h2 id="一、注册Github账户"><a href="#一、注册Github账户" class="headerlink" title="一、注册Github账户"></a>一、注册Github账户</h2><ol><li>访问<a href="https://link.juejin.im/?target=%E8%AE%BF%E9%97%AE%EF%BC%9Ahttp%3A%2F%2Fwww.github.com%2F" target="_blank" rel="noopener">Github首页</a></li><li>点击右上角的<a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fjoin%3Fsource%3Dheader-home" title="点击注册" target="_blank" rel="noopener">Sign Up</a>，注册自己的账户</li></ol><h2 id="二、创建项目代码库"><a href="#二、创建项目代码库" class="headerlink" title="二、创建项目代码库"></a>二、创建项目代码库</h2><ol><li>注册完登陆后，我们就创建一个我们自己的Github Pages项目。点击New repository。</li><li>创建要点如下：<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c7492a1849?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="repository" title="create repository"></li></ol><h2 id="三、配置SSH密钥"><a href="#三、配置SSH密钥" class="headerlink" title="三、配置SSH密钥"></a>三、配置SSH密钥</h2><p>配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。操作如下：</p><h3 id="第一步、看看是否存在SSH密钥-keys"><a href="#第一步、看看是否存在SSH密钥-keys" class="headerlink" title="第一步、看看是否存在SSH密钥(keys)"></a>第一步、看看是否存在SSH密钥(keys)</h3><p>首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/. ssh</span><br></pre></td></tr></table></figure></p><p>检查你本机用户home目录下是否存在.ssh目录</p><p>如果，不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。</p><h3 id="第二步、创建一对新的SSH密钥-keys"><a href="#第二步、创建一对新的SSH密钥-keys" class="headerlink" title="第二步、创建一对新的SSH密钥(keys)"></a>第二步、创建一对新的SSH密钥(keys)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ssh</span>-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br><span class="line"><span class="comment">#这将按照你提供的邮箱地址，创建一对密钥</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</span><br></pre></td></tr></table></figure><p>直接回车，则将密钥按默认文件进行存储。此时也可以输入特定的文件名，比如/c/Users/you/.ssh/github_rsa</p><p>接着，根据提示，你需要输入密码和确认密码（说到这里，如果你很放心，其实可以不用密码，就是到输密码的地方，都直接回车，所以每次push就只管回车就行了。所谓的最安全的密码，就是没有密码 哈哈）。相关提示如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class="line">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure><p>输入完成之后，屏幕会显示如下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/you/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/you/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure><h3 id="第三步、在GitHub账户中添加你的公钥"><a href="#第三步、在GitHub账户中添加你的公钥" class="headerlink" title="第三步、在GitHub账户中添加你的公钥"></a>第三步、在GitHub账户中添加你的公钥</h3><p>运行如下命令，将公钥的内容复制到系统粘贴板(clipboard)中。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>接着：</p><ol><li>登陆GitHub,进入你的Account Settings.<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c74ea98dce?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="account" title="github_account"></li><li>选择SSH Keys<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c75003310c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="key" title="key"></li><li>粘贴密钥，添加即可<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c758d3dd78?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="key2" title="key2"></li></ol><h3 id="第四步、测试"><a href="#第四步、测试" class="headerlink" title="第四步、测试"></a>第四步、测试</h3><p>可以输入下面的命令，看看设置是否成功，<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>的部分不要修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>如果是下面的反馈：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure><p>不要紧张，输入yes就好，然后会看到：<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c76b83e076?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="yes"></p><h3 id="第五步、设置用户信息"><a href="#第五步、设置用户信息" class="headerlink" title="第五步、设置用户信息"></a>第五步、设置用户信息</h3><p>现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。<br>Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字根据自己的喜好自己取，而不是GitHub的昵称。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"ryanlijianchang"</span>//用户名</span><br><span class="line">$ git config --global user.email  <span class="string">"liji.anchang@163.com"</span>//填写自己的邮箱</span><br></pre></td></tr></table></figure><h3 id="第六步、SSH-Key配置成功"><a href="#第六步、SSH-Key配置成功" class="headerlink" title="第六步、SSH Key配置成功"></a>第六步、SSH Key配置成功</h3><p>本机已成功连接到github。</p><h2 id="四、将本地的Hexo文件更新到Github的库中"><a href="#四、将本地的Hexo文件更新到Github的库中" class="headerlink" title="四、将本地的Hexo文件更新到Github的库中"></a>四、将本地的Hexo文件更新到Github的库中</h2><p>第一步、登录Github打开自己的项目 username.github.io </p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c76bcbdef9?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>第二步、打开之后，点击SSH，选择SSH类型地址</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c77317a936?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>第三步、复制地址</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c77a882a00?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>第四步、打开你一开始创建的Hexo文件夹（如F:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml文件</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c787c11116?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>第五步、在配置文件里作如下修改，保存</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c78dc8dca4?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>第六步、在Hexo文件夹下执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>或者直接执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></p><p>执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io(我的是：ryanlijianchang.github.io)。</p><p>假如这时候，报错 ERROR Deployer not found: git，那么就是你的deployer没有安装成功，你需要执行如下命令再安装一次：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --saved</span><br></pre></td></tr></table></figure><p>这样，你再执行hexo g -d，你的博客就部署到Github上了。</p><p>第七步、在浏览器上输入自己的主页地址</p><p>在浏览器上输入Github Pager为我们生成的外链（例如我的是：<a href="https://link.juejin.im/?target=https%3A%2F%2Fryanlijianchang.github.io%2F" target="_blank" rel="noopener">ryanlijianchang.github.io/</a>，而你的只需要把你的github用户名替换掉这个链接中的ryanlijianchang，因为我的用户名是这个，那么你自己的专属博客地址就是：<a href="https://link.juejin.im/?target=https%3A%2F%2F%5B%E6%82%A8%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%5D.github.io%2F%EF%BC%89%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%BA%86%E3%80%82" target="_blank" rel="noopener">https://[您的用户名].github.io/）即可看到自己的博客了。</a></p><p>当然，每一个人都可以通过这个地址访问到你的博客了。</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c79436ba6a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h1 id="美化自己博客"><a href="#美化自己博客" class="headerlink" title="美化自己博客"></a>美化自己博客</h1><p>那么现在我们的博客已经挂在了Github服务器上面，别人已经可以通过地址来登陆我们的博客了，但是我们这时就有了新的需求，就是自己的博客并不好看，那怎么办的？这很简单，要知道很多前端开发者在Hexo框架下开发了很多的主题给我们使用，我们只需要把他们的主题克隆过来，然后通过修改配置文件即可达到我们所需要的效果。</p><p>那么我们应该怎么修改呢？</p><h2 id="一、进入Hexo的官网主题专栏"><a href="#一、进入Hexo的官网主题专栏" class="headerlink" title="一、进入Hexo的官网主题专栏"></a>一、进入<a href="https://link.juejin.im/?target=https%3A%2F%2Fhexo.io%2Fthemes%2F" target="_blank" rel="noopener">Hexo的官网主题专栏</a></h2><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c7943f8189?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h2 id="二、挑选我们喜欢的主题"><a href="#二、挑选我们喜欢的主题" class="headerlink" title="二、挑选我们喜欢的主题"></a>二、挑选我们喜欢的主题</h2><p>可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：hexo-theme-next这个主题)</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c7ab832ba0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h2 id="三、克隆主题"><a href="#三、克隆主题" class="headerlink" title="三、克隆主题"></a>三、克隆主题</h2><p>再打开Hexo文件夹下的themes目录（F:\Blog\hexo\themes），右键Git Bash，在命令行输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next(此处地址替换成你需要使用的主题的地址)</span><br></pre></td></tr></table></figure><p>下载中，等待下载完成：</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c7b605e272?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h2 id="四、修改Hexo配置文件"><a href="#四、修改Hexo配置文件" class="headerlink" title="四、修改Hexo配置文件"></a>四、修改Hexo配置文件</h2><p>下载完成后，打开Hexo文件夹下的配置文件_config.yml<br>修改参数为：<code>theme: hexo-theme-next</code></p><h2 id="五、部署主题，本地查看效果"><a href="#五、部署主题，本地查看效果" class="headerlink" title="五、部署主题，本地查看效果"></a>五、部署主题，本地查看效果</h2><p>返回Hexo目录，右键Git Bash，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，输入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 即可看见我们的主题已经更换了。<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c7b86f3ce1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h2 id="六、如果效果满意，将它部署到Github上"><a href="#六、如果效果满意，将它部署到Github上" class="headerlink" title="六、如果效果满意，将它部署到Github上"></a>六、如果效果满意，将它部署到Github上</h2><p>打开Hexo文件夹，右键Git Bash，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   (必须要，不然有时因为缓存问题，服务器更新不了主题)</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h2 id="七、打开自己的主页，即可看到修改后的效果"><a href="#七、打开自己的主页，即可看到修改后的效果" class="headerlink" title="七、打开自己的主页，即可看到修改后的效果"></a>七、打开自己的主页，即可看到修改后的效果</h2><p>更多修改效果请查看对应主题的说明文档，<a href="https://link.juejin.im/?target=http%3A%2F%2Ftheme-next.iissnan.com%2F" target="_blank" rel="noopener">点击此</a>查看本主题(Next)对应的说明文档。</p><h1 id="在博客写文章"><a href="#在博客写文章" class="headerlink" title="在博客写文章"></a>在博客写文章</h1><h2 id="一、用hexo发表新文章"><a href="#一、用hexo发表新文章" class="headerlink" title="一、用hexo发表新文章"></a>一、用hexo发表新文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">"文章标题"</span></span><br></pre></td></tr></table></figure><p>其中 我的家 为文章标题，执行命令<code>hexo n</code>“我的家” 后，会在项目<code>\Hexo\source_posts</code>中生成<code>我的家.md</code>文件，用编辑器打开编写即可。</p><p>当然，也可以直接在\Hexo\source_posts中新建一个md文件，我就是这么做的。<br>写完后，推送到服务器上，执行以下命令即可在我们的站点看到新的文章。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment">#生成</span></span><br><span class="line">$ hexo d <span class="comment">#部署 # 可与hexo g合并为 hexo d -g</span></span><br></pre></td></tr></table></figure><h2 id="二、用Markdown写文章"><a href="#二、用Markdown写文章" class="headerlink" title="二、用Markdown写文章"></a>二、用Markdown写文章</h2><p>我们注意到在 \Hexo\source_posts 文件夹下存放着我们的文章，它们的格式都是以.md格式结尾的，没错，Hexo也是支持Markdown语法的，所以当我们需要写具有格式化的文章时，我们可以使用支持Markdown语法的编辑器进行文章编译，然后保存文件到 \Hexo\source_posts 文件夹下即可。</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c7bd487097?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>复制进去之后，只要执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>推送到我们的Github仓库即可。</p><p>那么什么是Markdown？</p><p>Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。</p><p>Markdown有什么优点？</p><ul><li>专注你的文字内容而不是排版样式。</li><li>轻松的导出 HTML、PDF 和本身的 .md 文件。</li><li>纯文本内容，兼容所有的文本编辑器与字处理软件。</li><li>可读，直观。适合所有人的写作语言。</li></ul><p>我该用什么工具？</p><ul><li>Windows下可以使用 MarkdownPad2。</li><li>在 Mac OS X 上，我建议你用 Mou 这款免费且十分好用的 Markdown 编辑器。</li><li>Web 端上，我强烈推荐 简书 这款产品。</li></ul><p>关于Markdown的更多资料可以查看如下：</p><ul><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fsspai.com%2F25137" target="_blank" rel="noopener">认识与入门 Markdown</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.douban.com%2Fnote%2F350126154%2F%3Ftype%3Dlike" target="_blank" rel="noopener">Markdown入门指南</a></li></ul><h1 id="将自己的域名关联到Github-Pages上"><a href="#将自己的域名关联到Github-Pages上" class="headerlink" title="将自己的域名关联到Github Pages上"></a>将自己的域名关联到Github Pages上</h1><p>很多朋友创建了自己的博客之后会选择买一个属于自己的域名，然后将自己域名绑定到自己的Github Pages博客上，其实这也并不难，只要你有个域名。</p><h2 id="一、购买域名"><a href="#一、购买域名" class="headerlink" title="一、购买域名"></a>一、购买域名</h2><p>如果你不是很有钱，在阿里云上，你只要几块钱就可以买到一个域名。</p><p>选择你喜欢的域名，然后购买即可</p><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c8529b7e80?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h2 id="二、配置CNAME文件"><a href="#二、配置CNAME文件" class="headerlink" title="二、配置CNAME文件"></a>二、配置CNAME文件</h2><p>在 \hexo\source 文件夹下创建文件 CNAME （新建记事本文件命名CNAME，然后打开）</p><p>内容为你的域名，例如我的域名是：<a href="https://link.juejin.im/?target=http%3A%2F%2Fryane.top" target="_blank" rel="noopener">ryane.top</a><br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c855add24e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>在Hexo文件夹提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h2 id="三、修改DNS"><a href="#三、修改DNS" class="headerlink" title="三、修改DNS"></a>三、修改DNS</h2><ol><li>如果你是在阿里云购买域名的话，请登录阿里云网站。打开个人中心，点击域名</li></ol><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c856d6f09b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><ol start="2"><li>选择管理</li></ol><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c85bffa826?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><ol start="3"><li>修改DNS为<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1g1ns2.dnspod.net </span><br><span class="line">f1g1ns1.dnspod.net</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c871f901d6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h2 id="四、域名解析"><a href="#四、域名解析" class="headerlink" title="四、域名解析"></a>四、域名解析</h2><ol><li><p>打开<a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.dnspod.cn%2F" target="_blank" rel="noopener">DNSPOD</a>，注册一个账户</p></li><li><p>点击添加域名，把你的域名添加进去，如无意外，添加完之后就是以下这个状态</p></li></ol><p><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c8762afc03?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><ol start="3"><li><p>此时点击添加记录，添加两个记录，一个主机记录为@， 一个为www，而记录值都是填同一个，填你的博客主页对应的ip，添加完后如下。<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c8788184d4?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p></li><li><p>但是如何获取ip值呢？打开运行，输入cmd，打开命令窗口输入 ping 主页地址 ， 红色部分即为你的ip值<br><img src="https://user-gold-cdn.xitu.io/2018/1/20/161117c88c7b5bba?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p></li><li><p>将IP输入过去，然后会提示你到域名注册的地方修改DNS。等待生效，最迟72小时生效。即可通过你的域名浏览你的博客主页。</p></li></ol><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>当你完成了你的博客之后，相信你的心情跟我刚做完的心情是一样的，即便很累，但是当自己的博客成型之后，自己还是有一个成就感的，那么完成后，以后的路还很长，真正想要自己博客能够积累人气，还得靠好的内容，所以认真写文章吧，相信你会受益于此的。</p><p>如果大家有什么问题的话，可以在我留言板下留言，我看到评论时会第一时间回答大家。</p><h1 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h1><ol><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fwowubuntu.com%2Fmarkdown%2Findex.html" target="_blank" rel="noopener">Markdown入门手册中文版</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.jianshu.com%2Fp%2F1e402922ee32%2F" target="_blank" rel="noopener">Markdown–入门指南</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fcnfeat.com%2Fblog%2F2014%2F05%2F10%2Fhow-to-build-a-blog%2F" target="_blank" rel="noopener">如何搭建一个独立博客——简明 Github Pages与 jekyll 教程 by cnfeat</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.cnblogs.com%2Fzhcncn%2Fp%2F4097881.html" target="_blank" rel="noopener">Hexo搭建Github静态博客</a> by 金石开</li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.xuanfengge.com%2Fusing-ssh-key-link-github-photo-tour.html" target="_blank" rel="noopener">使用SSH密钥连接Github【图文教程】</a> by 轩枫</li><li><a href="https://juejin.im/entry/5a574864f265da3e3c6c1217" target="_blank" rel="noopener">搭建自己的博客</a> Github:&lt;ryanlijianchang.github.io&gt;</li></ol><h1 id="参考视频"><a href="#参考视频" class="headerlink" title="参考视频"></a>参考视频</h1><p><a href="https://www.bilibili.com/video/av23085397/?spm_id_from=333.788.videocard.5" title="点击访问视频" target="_blank" rel="noopener">《Hexo博客+Next主题教程》(第二版)-建站</a></p><iframe src="//player.bilibili.com/player.html?aid=23085397&cid=38399182&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="500"> </iframe>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
